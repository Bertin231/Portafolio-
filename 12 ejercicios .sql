CREATE TABLE MATERIA (
ID_MATERIA NUMBER,
NOMBRE NVARCHAR2(100),
NIVEL NUMBER,
CREDITOS NUMBER , 
DOCENTE NUMBER, --1. JESUS, 2. MARIANA 3. DANIEL 4. ALAN 5. ARMANDO 6.JOSUE 
CONSTRAINT MATERIA_PK PRIMARY KEY (ID_MATERIA)
);

INSERT INTO MATERIA VALUES (1,'ANATOMIA',2,25,3);
INSERT INTO MATERIA VALUES (2,'MATEMATICAS DISCRTEAS',1,30,1);
INSERT INTO MATERIA VALUES (3,'REDES EMERGENTES',7,25,4);
INSERT INTO MATERIA VALUES (4,'DESARROLLO DE EMPRENDEDORES',5,15,1);
INSERT INTO MATERIA VALUES (5, 'ALGEBRA', 5, 50, 6);
INSERT INTO MATERIA VALUES (6, 'DEPORTES', 7, 10, 1);
INSERT INTO MATERIA VALUES (7,'INGLES', 3,10,4);
INSERT INTO MATERIA VALUES (8,'PROGRAMACION', 1,30,6);
INSERT INTO MATERIA VALUES (9, 'INGLES', 4, 35, 4);
INSERT INTO MATERIA VALUES (10, 'DESARROLLO MOVIL', 5, 37, 2);
INSERT INTO MATERIA VALUES (11, 'FISICA II',3 ,27,2);
INSERT INTO MATERIA VALUES (12, 'CALCULO INFERENCIAL',2 ,26,3);
COMMIT;

--CREAR DDL PARA LA TABLA ALUMNO
CREATE TABLE ALUMNO(
ID_ALUMNO NUMBER,
NOMBRE NVARCHAR2(100),
APELLIDO NVARCHAR2(100),
EDAD NUMBER,
CARRERA NUMBER, --1 SISTEMAS 2 INFORMATICA 3 MEDICINA 5 DERECHO 
MATERIA_ID NUMBER,
CONSTRAINT ALUMNO_PK PRIMARY KEY (ID_ALUMNO),
CONSTRAINT MATERIA_FK FOREIGN KEY(MATERIA_ID) REFERENCES MATERIA (ID_MATERIA)
);

INSERT INTO ALUMNO VALUES(1,'DANTE','HERRERA',25,3,1);
INSERT INTO ALUMNO VALUES(2,'ELLIE','CARMONA',21,2,3);
INSERT INTO ALUMNO VALUES(3, 'JOSE', 'MARTINEZ', 27, 2, 2);
INSERT INTO ALUMNO VALUES(4, 'ROBERTO', 'JIMINEZ', 22, 0, NULL);
INSERT INTO ALUMNO VALUES(5, 'CARLOS', 'CONTRERAS', 15, 4, 2);
INSERT INTO ALUMNO VALUES(6, 'PANCHO', 'IBARRA', 22, 4, 1);
INSERT INTO ALUMNO VALUES(7, 'LEONARDO', 'ROSAS', 25, 1, 3);
INSERT INTO ALUMNO VALUES(8, 'VICTOR', 'VAZQUEZ', 22, 4, 1);
INSERT INTO ALUMNO VALUES(9, 'JUAN', 'RAMIREZ', 25, 4, NULL);
INSERT INTO ALUMNO VALUES(10, 'ELENA', 'ALCANTARA', 25, 1, 1);
INSERT INTO ALUMNO VALUES(11, 'MACARIO', 'MARTINEZ', 22, 2, 2);
INSERT INTO ALUMNO VALUES(12, 'MAURO', 'JIMINEZ', 24, 3, 3);
COMMIT;

--REALIZAR LOS SIG EJERCICIOS

--1 MOSTRAR LOS REGISTROS DEL ALUMNO CON SUS MATERIAS Y SU CASE PARA DOCENTE Y CARRERA
SELECT 
A.NOMBRE,
A.APELLIDO,
A.EDAD,
(
CASE A.CARRERA
WHEN 1 THEN 'SISTEMAS'
WHEN 2 THEN 'INFORMATICA'
WHEN 3 THEN 'MEDICINA'
WHEN 4 THEN 'DERECHO'
ELSE 'NO SE ENCONTRO LA CARRERA'
END
)AS CARRERA,
M.NOMBRE AS MATERIA,
(
CASE M.DOCENTE
WHEN 1 THEN 'JESUS'
WHEN 2 THEN 'MARIAN'
WHEN 3 THEN 'DANIEL'
WHEN 4 THEN 'ALAN'
WHEN 5 THEN 'ARMANDO'
WHEN 6 THEN 'JOSUE'
ELSE 'NO SE ENCONTRO PROFESOR'
END
)AS DOCENTE 
FROM ALUMNO A
INNER JOIN 
MATERIA M ON A.MATERIA_ID = M.ID_MATERIA;

--2 CUANTOS ALUMNOS TENGO POR MATERIA 

SELECT 
M.NOMBRE AS MATERIA,
COUNT(A.MATERIA_ID)AS NUM_ALUMNOS
FROM 
MATERIA M
LEFT JOIN 
ALUMNO A ON A.MATERIA_ID = M.ID_MATERIA
GROUP BY 
  M.NOMBRE;


--3 MOSTRAR MATERIAS CON MAYOR NUMERO DE CREDITOS Y AGREGAR LA PALABRA "CREDITOS" EN EL RESULTADO
SELECT 
NOMBRE,
NIVEL,
CREDITOS || 'CREDITOS' AS PCREDITOS,
DOCENTE
FROM MATERIA
WHERE CREDITOS = (SELECT MAX(CREDITOS)FROM MATERIA);

--4 MOSTRAR EL DOCENTE QUE IMPARTE MAS MATERIAS QUE LOS DEMAS 

SELECT *
FROM (
    SELECT 
        DOCENTE,  
        COUNT(ID_MATERIA) AS IMPARTE_MATERIAS  
    FROM 
        MATERIA
    GROUP BY 
        DOCENTE  
    ORDER BY 
        IMPARTE_MATERIAS DESC
)
WHERE ROWNUM = 1;



--5 MOSTRAR EL DOCENTE Y EL NUMERO DE MATERIAS IMPARTIDAS 
SELECT 
    DOCENTE,  
    COUNT(ID_MATERIA) AS IMPARTE_MATERIAS  
FROM 
    MATERIA
GROUP BY 
    DOCENTE  
ORDER BY 
    IMPARTE_MATERIAS DESC;


--6 ORDENAR LAS MATERIAS POR SU NOMBRE Y  POR CREDITOS 

SELECT 
NOMBRE,
CREDITOS
FROM
MATERIA
ORDER BY 
NOMBRE ASC,
CREDITOS ASC;


--7 ORDENAR LOS ALUMNOS POR SU APELLIDO Y  POR EDAD

SELECT 
APELLIDO,
EDAD
FROM 
ALUMNO
ORDER BY 
APELLIDO ASC,
EDAD ASC;


--8 MOSTRAR EL TOTAL DE CREDITOS POR ALUMNO DEACUERDO A LAS MATERIAS QUE TOMARA
SELECT 
A.ID_ALUMNO,
A.NOMBRE,
A.APELLIDO,
SUM(M.CREDITOS)AS TOTAL_CREDITOS
FROM ALUMNO A
INNER JOIN MATERIA M
ON A.MATERIA_ID = M.ID_MATERIA
GROUP BY 
A.ID_ALUMNO,A.NOMBRE,A.APELLIDO
ORDER BY 
A.ID_ALUMNO;

--9 MOSTRAR EL ALUMNO CON MAYOR CANTIDAD DE CREDITOS POR TOMAR 
SELECT A.ID_ALUMNO, A.NOMBRE, A.APELLIDO, SUM(M.CREDITOS) AS TOTAL_CREDITOS
FROM ALUMNO A
JOIN MATERIA M ON A.MATERIA_ID = M.ID_MATERIA
GROUP BY A.ID_ALUMNO, A.NOMBRE, A.APELLIDO
ORDER BY TOTAL_CREDITOS DESC
FETCH FIRST 1 ROWS ONLY;

--10 MOSTRAR LOS ALUMNOS QUE NO TIENEN MATERIAS ASIGNADAS Y SU CASE PARA CARRERA 
SELECT 
    A.ID_ALUMNO,
    A.NOMBRE,
    A.APELLIDO,
    A.EDAD,
    CASE 
        WHEN A.CARRERA = 1 THEN 'SISTEMAS'
        WHEN A.CARRERA = 2 THEN 'INFORMATICA'
        WHEN A.CARRERA = 3 THEN 'MEDICINA'
        WHEN A.CARRERA = 4 THEN 'DERECHO'
        ELSE 'NO SE ENCONTRO LA CARRERA'
    END AS CARRERA
FROM 
    ALUMNO A
LEFT JOIN 
    MATERIA M ON A.MATERIA_ID = M.ID_MATERIA
WHERE 
    A.MATERIA_ID IS NULL;


--11 MOSTRAR LAS MATERIAS QUE NO ESTAN SIENDO IMPARTIDAS Y SU CASE PARA DOCENTE 
SELECT 
    M.NOMBRE AS MATERIA,
    CASE 
        WHEN M.DOCENTE = 1 THEN 'JESUS'
        WHEN M.DOCENTE = 2 THEN 'MARIANA'
        WHEN M.DOCENTE = 3 THEN 'DANIEL'
        WHEN M.DOCENTE = 4 THEN 'ALAN'
        WHEN M.DOCENTE = 5 THEN 'ARMANDO'
        WHEN M.DOCENTE = 6 THEN 'JOSUE'
        ELSE 'NO SE ENCONTRO DOCENTE'
    END AS DOCENTE
FROM 
    MATERIA M
LEFT JOIN 
    ALUMNO A ON M.ID_MATERIA = A.MATERIA_ID
WHERE 
    M.DOCENTE IS NULL;



--12 MOSTRAR EL DETALLE DEL ALUMNO Y LOS DATOS DE LA MATERIA QUE TOMARA CON SU CASE CORRESPONDIENTE (CONCAT O PIPE)
SELECT 
    'EL ALUMNO ' || A.NOMBRE || ' ' || A.APELLIDO || ' DE EDAD ' || TO_CHAR(A.EDAD) || 
    ' CURSA LA CARRERA ' || 
    CASE 
        WHEN A.CARRERA = 1 THEN 'SISTEMAS'
        WHEN A.CARRERA = 2 THEN 'INFORMATICA'
        WHEN A.CARRERA = 3 THEN 'MEDICINA'
        WHEN A.CARRERA = 4 THEN 'DERECHO'
        ELSE 'NO SE ENCONTRO LA CARRERA'
    END 
    || ' Y EST√Å CURSANDO LA MATERIA ' || M.NOMBRE AS DETALLE
FROM 
    ALUMNO A
LEFT JOIN 
    MATERIA M ON A.MATERIA_ID = M.ID_MATERIA;
